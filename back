const cheerio = require('cheerio');
const getUrls = require('get-urls');
const fetch = require('node-fetch');
const puppeteer = require('puppeteer');
const fs = require('fs');
const https = require('https');

const URL = 'https://www.starwars.com/';
const people = [
  {
    name: 'Luke Skywalker',
  },
  {
    name: 'C-3PO',
  },
  {
    name: 'R2-D2',
  },
];
const scrapeImages = async name => {
  const browser = await puppeteer.launch({ headless: true });
  const page = await browser.newPage();

  await page.goto(URL);

  // Login form
  await page.screenshot({ path: 'images/1.png' });

  await page.click('#nav-search-icon');

  await page.screenshot({ path: 'images/2.png' });

  await page.type('[name=q]', name);

  await page.screenshot({ path: 'images/3.png' });

  await page.keyboard.press('Enter');

  await page.waitForSelector('li.artifact');

  await page.screenshot({ path: 'images/4.png' });

  await page.click('h3.title');

  await page.waitForSelector('img.reserved-ratio');

  await page.screenshot({ path: 'images/5.png' });

  //   const images = await page.evaluate(() =>
  //     Array.from(document.images, e => e.src)
  //   );

  const imageURL = await page.$eval(
    'img[class="thumb reserved-ratio"]',
    node => node.src
  );
  console.log(imageURL);
  await page.goto(imageURL);

  await page.screenshot({ path: 'images/6.png' });

  download(imageURL, `downloads/${name}.png`);
};

const download = (url, destination) =>
  new Promise((resolve, reject) => {
    const file = fs.createWriteStream(destination);

    https
      .get(url, response => {
        response.pipe(file);

        file.on('finish', () => {
          file.close(resolve(true));
        });
      })
      .on('error', error => {
        fs.unlink(destination);

        reject(error.message);
      });
  });

// console.log(people[0].name);
// scrapeImages(people[0].name);

const start = async () => {
  for (let i = 0; i < people.length; i++) {
    console.log(people[i].name);
    await scrapeImages(people[i].name);
  }
};

start();
// for (let person of people) {
//   scrapeImages(person.name);
// }

// scrapeImages();
